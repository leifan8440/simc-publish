name: Nightly

on:
  schedule:
    - cron: '0 0 1 1 *' # run at 0 AM UTC
  workflow_dispatch:
    inputs:
      dryRun:
        description: "If true, do not upload files"
        default: true

env:
  SIMC_PROFILE: profiles/CI.simc
  ORG_NAME: simulationcraftorg
  IMAGE_NAME: simc

jobs:
  nightly-build-windows:
    name: Windows Nightly ${{ matrix.architecture }} ${{ matrix.source_branch }} ${{ matrix.qt }}
    runs-on: windows-latest
    env:
        SIMCDIR: ${{ github.workspace }}
        INSTALL: ${{ github.workspace }}/install
        CMAKE_BUILD_DIR: ${{ github.workspace }}/builddir/
        uploadDir: ${{ github.workspace }}/upload
    strategy:        
      fail-fast: false
      matrix:
        qt: [qt6]
        targetConfiguration: [Release]
        source_branch: [thewarwithin]
        architecture: [x64]
        include:
          - qt: qt6
            qt_version: 6.5.*
            qt_modules: qtwebengine qtwebchannel qtpositioning
          - architecture: x64
            cl_architecture: x64
            package_suffix: win64
            qt_arch: win64_msvc2019_64
            smokeTest: true
            buildGui: ON
          - source_branch: thewarwithin
            smokeTest: false

    steps:
      - uses: actions/checkout@v4
        with:
          repository: simulationcraft/simc
          ref: ${{ matrix.source_branch }}

      - name: Get git hash
        id: git_hash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Get cmake
        uses: lukka/get-cmake@latest
       
      - name: Add MSBuild and MS C++ Compiler to path
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.cl_architecture }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          modules: ${{ matrix.qt_modules }}
          arch: ${{ matrix.qt_arch }}
          version: ${{ matrix.qt_version }}

      - name: Create Install and Upload Directory
        run: |
          mkdir ${{ env.INSTALL }}
          mkdir ${{ env.uploadDir }}
          
      - name: Extract Simc Version info and setup output information
        id: simc_info
        env:
          configHeader: engine/config.hpp
        run: |
          $env:simc_major = Get-Content "${{ env.configHeader }}" | Select-String '#define SC_MAJOR_VERSION \"(.+)\"' | ForEach-Object {$_.Matches[0].Groups[1].Value}
          $env:simc_minor = Get-Content "${{ env.configHeader }}" | Select-String '#define SC_MINOR_VERSION \"(.+)\"' | ForEach-Object {$_.Matches[0].Groups[1].Value}
          mkdir ${{ env.CMAKE_BUILD_DIR }}
          echo "$env:simc_major.$env:simc_minor" > ${{ env.CMAKE_BUILD_DIR }}/simc-version
          
      - name: Generate project files
        run: |
          cmake -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DBUILD_GUI=${{ matrix.buildGui }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=${{ steps.simc_info.outputs.install_dir}} -DSC_DEFAULT_APIKEY=${{ secrets.SC_DEFAULT_APIKEY }} -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=1 -DCPACK_SYSTEM_NAME=${{ matrix.package_suffix }} --log-level=VERBOSE
          
      - name: Build
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target all

      - name: Smoke Test
        if: ${{ matrix.smokeTest }}
        run: |
          & "${{ env.CMAKE_BUILD_DIR }}/simc.exe" ${{ env.SIMC_PROFILE }} iterations=5 output=nul html=nul json2=nul cleanup_threads=1
          
      - name: Package
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}" --target package

      - uses: actions/upload-artifact@v4
        with:
          name: simc-nightly-${{ matrix.package_suffix }}-${{ matrix.source_branch }}
          path: |    
            ${{ env.CMAKE_BUILD_DIR }}/*.7z
            ${{ env.CMAKE_BUILD_DIR }}/simc-version
